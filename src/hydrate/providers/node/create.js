let path = require('path')
let fs = require('fs')
//let spawn = require('child_process').spawnSync
//let mkdir = require('mkdirp').sync
let npm = require('../npm')
let copyCommon = require('../../shared/_copy')

/**
 * create a node lambda
 */
module.exports = function create(params, callback) {

  let {absolutePath, relativePath, app, arc, idx} = params
  // if node we write
  // - package.json
  // - install architect/functions and architect/data
  // - package-lock.json (generated by above)
  // - src/shared --------> node_modules/@architect/shared
  // - src/views ---------> node_modules/@architect/views
  // - src/shared/.arc ---> node_modules/@architect/shared/.arc
  let pathToPkg = path.join(absolutePath, 'package.json')
  let pkg = JSON.stringify({name:`${app}-${idx}`}, null, 2)
  fs.writeFileSync(pathToPkg, pkg)

  let args = ['i', '@architect/functions', '@architect/data']
  npm([[absolutePath, args]], function done(err) {
    if (err) callback(err)
    else {
      copyCommon({
        arc,
        pathToCode: [relativePath]
      }, callback)
    }
  })
}
